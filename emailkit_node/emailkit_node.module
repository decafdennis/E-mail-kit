<?php
// Developed by Dennis Stevense for Digital Deployment

/**
 * Implementation of hook_perm().
 */
function emailkit_node_perm() {
  $perm = array();
  
  $perm[] = 'e-mail content';
  $perm[] = 'e-mail own content';
  
  return $perm;
}

/**
 * Implementation of hook_menu().
 */
function emailkit_node_menu() {
  $items = array();

  $items['node/%node/message'] = array(
    'title' => 'E-mail',
    'page callback' => 'emailkit_node_send',
    'page arguments' => array(1),
    'access callback' => 'emailkit_node_access',
    'access arguments' => array(1),
    'weight' => 10,
    'file' => 'emailkit_node.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/message/send'] = array(
    'title' => 'Send message',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['node/%node/message/preview'] = array(
    'title' => 'Preview message',
    'page callback' => 'emailkit_node_preview',
    'page arguments' => array(1),
    'access callback' => 'emailkit_node_access',
    'access arguments' => array(1),
    'file' => 'emailkit_node.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/message/preview/%'] = array(
    'page callback' => 'emailkit_node_preview_format',
    'page arguments' => array(1, 4),
    'access callback' => 'emailkit_node_access',
    'access arguments' => array(1),
    'file' => 'emailkit_node.pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['node/%node/message/sent'] = array(
    'title' => 'Sent messages',
    'page callback' => 'emailkit_node_sent',
    'page arguments' => array(1),
    'access callback' => 'emailkit_node_access',
    'access arguments' => array(1),
    'file' => 'emailkit_node.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/message/sent/%/statistics'] = array(
    'title' => 'Statistics',
    'page callback' => 'emailkit_node_sent_message_statistics',
    'page arguments' => array(1, 4),
    'access callback' => 'emailkit_node_access',
    'access arguments' => array(1),
    'file' => 'emailkit_node.pages.inc',
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Returns a flag indicating whether the user should have access to the E-mail tab on nodes.
 */
function emailkit_node_access($node) {
  global $user;
  
  return user_access('e-mail content') || ($node->uid == $user->uid && user_access('e-mail own content'));
}

/**
 * Implementation of hook_theme().
 */
function emailkit_node_theme() {
  $theme = array();
  
  // Should be overridden by themes that wish to customize the rendering of nodes in messages
  $theme['emailkit_node'] = array(
    'arguments' => array('element' => NULL),
    'file' => 'emailkit_node.inc',
  );
  
  $theme['emailkit_node_sent'] = array(
    'arguments' => array('messages' => array()),
    'file' => 'emailkit_node.pages.inc',
  );

  $theme['emailkit_formatter_emailkit'] = array(
    'arguments' => array('element' => NULL),
    'file' => 'emailkit_node.inc',
  );

  return $theme;
}

/**
 * Implementation of hook_preprocess_node().
 */
function emailkit_node_preprocess_node(&$variables) {
  $node = $variables['node'];

  // Check if this node came through theme_emailkit_node()
  if (isset($node->build_mode) && $node->build_mode === 'emailkit') {
    // Suggest node-emailkit.tpl.php and node-emailkit-TYPE.tpl.php
    $variables['template_files'][] = 'node-emailkit';
    $variables['template_files'][] = 'node-emailkit-' . $node->type;
  }

  // Check if this node is referenced by a node that came through theme_emailkit_node()
  if (isset($node->referencing_node) && isset($node->referencing_node->build_mode) && $node->referencing_node->build_mode === 'emailkit') {
    // Suggest additional templates
    $field = $node->referencing_field;
    $variables['template_files'][] = 'node-emailkit-nodereference';
    $variables['template_files'][] = 'node-emailkit-nodereference-'. $field['field_name'];
    $variables['template_files'][] = 'node-emailkit-nodereference-'. $node->type;
    $variables['template_files'][] = 'node-emailkit-nodereference-'. $field['field_name'] .'-'. $node->type;
  }
}

/**
 * Implementation of hook_content_build_modes().
 */
function emailkit_node_content_build_modes() {
  // Note: in Drupal 7, we should implement hook_entity_info_alter() and add a view mode to the node entity
  return array(
    'emailkit' => array(
      'title' => t('E-mail'),
      'build modes' => array(
        'emailkit' => array(
          'title' => t('E-mail'),
        ),
      ),
    ),
  );
}

/**
 * Implementation of hook_field_formatter_info().
 */
function emailkit_field_formatter_info() {
  // This formatter can be used to triggering the emailkit build mode
  return array(
    'emailkit' => array(
      'label' => t('E-mail'),
      'field types' => array('nodereference'),
      'multiple values' => CONTENT_HANDLE_CORE,
    ),
  );
}

/**
 * Implementation of hook_emailkit_message_info().
 */
function emailkit_node_emailkit_message_info() {
  $info = array();

  $info['emailkit_node'] = array(
    '#label' => t('Content'),
    '#file' => 'emailkit_node.inc',
  );
  
  return $info;
}

/**
 * Implementation of hook_emailkit_message_after_send().
 */
function emailkit_node_emailkit_message_after_send($message, $destination, $success) {
  // Only act if sending was successful and if this is not a recursive call of emailkit_send()
  if ($success && $message['#id'] == 'emailkit_node' && $message['#sending_depth'] == 0) {
    global $user;

    // Keep a record of this message
    db_query("INSERT INTO {emailkit_node_message} (token, nid, uid, sent) VALUES ('%s', %d, %d, %d)", $message['#token'], $message['#node']->nid, $user->uid, time());
  }
}
