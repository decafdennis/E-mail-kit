<?php
// Developed by Dennis Stevense for Digital Deployment

/**
 * The time after which a confirmation URL expires.
 */
define('EMAILKIT_LIST_CONFIRMATION_URL_TIMEOUT', 86400); // 24 hours

/**
 * Implementation of hook_perm().
 */
function emailkit_list_perm() {
  $perm = array();
  
  // Permission for adding, editing and deleting e-mail lists
  $perm[] = 'administer e-mail lists';
  
  // Permissions for adding, editing and deleting subscribers
  $perm[] = 'administer subscribers';
  
  return $perm;
}

/**
 * Implementation of hook_menu().
 */
function emailkit_list_menu() {
  $items = array();
  
  // Menu items for updating a subscriber's e-mail address or subscriptions
  $items['emailkit/list/subscriber'] = array(
    'title' => 'Subscriber',
    'page callback' => 'emailkit_list_subscriber_subscriptions_page',
    'access callback' => 1,
    'file' => 'emailkit_list.pages.inc',
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['emailkit/list/subscriber/subscriptions'] = array(
    'title' => 'Subscriptions',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  // Menu item for confirming subscription updates
  $items['emailkit/list/confirm'] = array(
    'page callback' => 'emailkit_list_confirmation_page',
    'access callback' => TRUE,
    'file' => 'emailkit_list.inc',
  );
  
  // Menu items for adding, editing and deleting e-mail lists
  $items['admin/emailkit/list/lists'] = array(
    'title' => 'Lists',
    'description' => 'Manage the e-mail lists that users can subscribe to.',
    'page callback' => 'emailkit_list_admin_list',
    'access arguments' => array('administer e-mail lists'),
    'file' => 'emailkit_list.admin.inc',
  );
  $items['admin/emailkit/list/lists/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/emailkit/list/lists/add'] = array(
    'title' => 'Add list',
    'page callback' => 'emailkit_list_admin_add',
    'access arguments' => array('administer e-mail lists'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/emailkit/list/lists/%emailkit_list/edit'] = array(
    'title' => 'Edit list',
    'page callback' => 'emailkit_list_admin_edit',
    'page arguments' => array(4),
    'access arguments' => array('administer e-mail lists'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/emailkit/list/lists/%emailkit_list/delete'] = array(
    'title' => 'Delete list',
    'page callback' => 'emailkit_list_admin_delete',
    'page arguments' => array(4),
    'access arguments' => array('administer e-mail lists'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_CALLBACK,
  );
  
  // Menu items for adding, editing and deleting subscribers
  $items['admin/emailkit/list/subscribers'] = array(
    'title' => 'Subscribers',
    'description' => 'Manage subscribers.',
    'page callback' => 'emailkit_list_admin_subscriber_list',
    'access arguments' => array('administer subscribers'),
    'file' => 'emailkit_list.admin.inc',
  );
  $items['admin/emailkit/list/subscribers/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/emailkit/list/subscribers/add'] = array(
    'title' => 'Add subscriber',
    'page callback' => 'emailkit_list_admin_subscriber_add',
    'access arguments' => array('administer subscribers'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/emailkit/list/subscribers/%emailkit_list_subscriber/edit'] = array(
    'title' => 'Edit subscriber',
    'page callback' => 'emailkit_list_admin_subscriber_edit',
    'page arguments' => array(4),
    'access arguments' => array('administer subscribers'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/emailkit/list/subscribers/%emailkit_list_subscriber/delete'] = array(
    'title' => 'Delete subscriber',
    'page callback' => 'emailkit_list_admin_subscriber_delete',
    'page arguments' => array(4),
    'access arguments' => array('administer subscribers'),
    'file' => 'emailkit_list.admin.inc',
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_help().
 */
function emailkit_list_help($path, $arg) {
  global $user;
  
  switch ($path) {
    case 'emailkit/list/subscriber':
    case 'emailkit/list/subscriber/subscriptions':
      if (!empty($user->uid)) {
        return t('<p>You can use the form below to update your subscriptions.');
      }
      else {
        return t('<p>You can use the form below to update your subscriptions. If you have an account on our site, you may also <a href="@login-url">log in</a> to update your subscriptions.</p>', array('@login-url' => url('user', array('query' => drupal_get_destination()))));
      }

    case 'admin/emailkit/list/subscribers/add':
    case 'admin/emailkit/list/subscribers/%/edit':
      return t('<p>Either a valid e-mail address or the name of an existing user account is required. If you enter a username, the e-mail address will be determined automatically.</p>');
  }
}

/**
 * Implementation of hook_theme().
 */
function emailkit_list_theme() {
  $theme = array();
  
  // Theming for the e-mail lists admin form
  $theme['emailkit_list_admin_list_form'] = array(
    'arguments' => array(
      'form' => array(),
    ),
    'file' => 'emailkit_list.admin.inc',
  );
  
  // Theming for the subscribers admin form
  $theme['emailkit_list_admin_subscriber_list_form'] = array(
    'arguments' => array(
      'form' => array(),
    ),
    'file' => 'emailkit_list.admin.inc',
  );
  
  // Theming for the list-specific subscription block content
  $theme['emailkit_list_block_subscription_content'] = array(
    'arguments' => array(
      'elements' => array(),
    ),
    'file' => 'emailkit_list.block.inc',
  );
  
  return $theme;
}

/**
 * Implementation of hook_forms().
 */
function emailkit_list_forms($form_id, $args) {
  $forms = array();

  if (strpos($form_id, 'emailkit_list_block_subscription_') === 0) {
    $forms[$form_id] = array(
      'callback' => 'emailkit_list_block_subscription_form',
    );
  }

  return $forms;
}


/**
 * Implementation of hook_user().
 */
function emailkit_list_user($op, &$edit, &$user, $category = NULL) {
  // For certain operations, check subscriptions access
  if ($op == 'form' || $op == 'update') {
    $active_user = $GLOBALS['user'];

    if ($user->uid != $active_user->uid && !user_access('administer subscriptions')) {
      return;
    }
  }
  
  module_load_include('inc', 'emailkit_list', 'emailkit_list.user');
  
  switch ($op) {
    case 'form':
      return emailkit_list_user_form($user);
      
    case 'update':
      return emailkit_list_user_form_submit($user, $edit);
  }
}

/**
 * Implementation of hook_block().
 */
function emailkit_list_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      module_load_include('inc', 'emailkit_list', 'emailkit_list');
      
      $blocks = array();
      
      // General subscriptions block
      $blocks['subscriptions'] = array(
        'info' => t('E-mail list subscriptions'),
        'cache' => BLOCK_CACHE_PER_USER,
      );
      
      // List-specific subscription blocks
      $lists = emailkit_list_load_all();

      foreach ($lists as $lid => $list) {
        $blocks['subscription_' . $lid] = array(
          'info' => t('E-mail list subscription: !list-name', array('!list-name' => $list->name)),
          'cache' => BLOCK_CACHE_PER_USER,
        );
      }
      
      return $blocks;
      
    case 'view':
      // Include the appropriate file and pass on the message, to keep the main module file lean
      module_load_include('inc', 'emailkit_list', 'emailkit_list.block');
      
      if ($delta == 'subscriptions') {
        return emailkit_list_block_subscriptions_view();
      }
      else if (strpos($delta, 'subscription_') === 0 && preg_match('/^subscription_(\d+)$/', $delta, $match)) {
        module_load_include('inc', 'emailkit_list', 'emailkit_list');
        
        $lid = $match[1];
        $list = emailkit_list_load($lid);
        
        if (!empty($list)) {
          return emailkit_list_block_subscription_view($list);
        }
      }
      
      return;
  }
}

/**
 * Implementation of hook_emailkit_destination_info().
 */
function emailkit_list_emailkit_destination_info() {
  $info = array();

  $info['emailkit_list'] = array(
    '#label' => t('E-mail list'),
    '#exposed' => TRUE,
    '#default_dispatcher' => 'emailkit_list',
    '#file' => 'emailkit_list.inc',
  );
  
  return $info;
}

/**
 * Implementation of emailkit_emailkit_dispatcher_info().
 */
function emailkit_list_emailkit_dispatcher_info() {
  $info = array();

  $info['emailkit_list'] = array(
    '#label' => t('Readdress as a generic e-mail destination'),
    '#destinations' => array('emailkit_list'),
    '#file' => 'emailkit_list.inc',
  );
  
  return $info;
}

/**
 * Implementation of emailkit_emailkit_message_info().
 */
function emailkit_list_emailkit_message_info() {
  $info = array();

  $info['emailkit_list_confirmation'] = array(
    '#label' => t('Subscription confirmation'),
    '#file' => 'emailkit_list.inc',
  );
  
  return $info;
}

function emailkit_list_emailkit_message_before_send(&$message, &$destination) {
  if ($destination['#type'] == 'emailkit_list' && !isset($message['footer']['rationale'])) {
    $list_names = array();
    $lids = $destination['#lids'];
    
    foreach ($lids as $lid) {
      $list = emailkit_list_load($lid);
      
      if (isset($list)) {
        $list_names[] = $list->name;
      }
    }

    // Compose a rationale for this message
    $rationale = NULL;

    if (empty($list_names)) {
      // For some odd reason we don't know to which list this is being sent
      $rationale = t('You are receiving this message because you are subscribed to one of our e-mail lists');
    }
    else {
      $list_name = array_pop($list_names);
      $rationale = t('You are receiving this message because you are subscribed to the %list-name e-mail list.', array('%list-name' => $list_name));
    }
    
    // Add instructions for updating a subscriber's subscriptions
    $rationale .= ' ';
    $rationale .= t('You can <a href="@subscriptions-url">unsubscribe or update your subscriptions</a> at our site.', array('@subscriptions-url' => url('emailkit/list/subscriber', array('absolute' => TRUE))));
    
    $message['footer']['rationale'] = array(
      '#value' => $rationale,
    );
  }
}

/**
 * Loads the list with the given identifier from the database.
 *
* @return A list, or NULL if it cannot be found.
 */
function emailkit_list_load($lid) {
  if ($list = db_fetch_object(db_query("SELECT * FROM {emailkit_list} WHERE lid = %d", $lid))) {
    return $list;
  }
}

/**
 * Loads the subscriber with the given identifier from the database.
 *
 * @return A subscriber object or NULL.
 */
function emailkit_list_subscriber_load($sid) {
  if ($subscriber = db_fetch_object(db_query("SELECT * FROM {emailkit_list_subscriber} WHERE sid = %d", $sid))) {
    return $subscriber;
  }
}

/**
 * Private function that adds a class to a form element.
 */
function _emailkit_list_element_add_class(&$element, $class) {
  // Make sure we have an attributes array
  if (!isset($element['#attributes'])) {
    $element['#attributes'] = array();
  }
  
  // Make sure we have a class attribute
  if (!isset($element['#attributes']['class'])) {
    $element['#attributes']['class'] = '';
  }
  else {
    $element['#attributes']['class'] .= ' ';
  }
  
  $element['#attributes']['class'] .= $class;
}
